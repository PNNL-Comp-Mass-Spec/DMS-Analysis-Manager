<?xml version="1.0"?>
<doc>
<assembly>
<name>
AnalysisManagerExtractionPlugin
</name>
</assembly>
<members>
<member name="M:AnalysisManagerExtractionPlugin.clsPeptideExtractWrapper.#ctor(AnalysisManagerBase.IMgrParams,AnalysisManagerBase.IJobParams,AnalysisManagerBase.IStatusFile@)">
	<summary>
 Constructor
 </summary>
	<param name="MgrParams">IMgrParams object containing manager settings</param>
	<param name="JobParams">IJobParams object containing job parameters</param>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsPeptideExtractWrapper.PerformExtraction">
	<summary>
 Performs peptide extraction by calling extractor DLL
 </summary>
	<returns>IJobParams.CloseOutType indicating success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsAnalysisResourcesExtraction.GetResources">
	<summary>
 Gets all files needed to perform data extraction
 </summary>
	<returns>IJobParams.CloseOutType specifying results</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsAnalysisResourcesExtraction.GetInputFiles(System.String)">
	<summary>
 Retrieves input files (ie, .out files) needed for extraction
 </summary>
	<param name="ResultType">String specifying type of analysis results input to extraction process</param>
	<returns>IJobParams.CloseOutType specifying results</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsAnalysisResourcesExtraction.RetrieveMiscFiles">
	<summary>
 Retrieves misc files (ie, ModDefs) needed for extraction
 </summary>
	<returns>IJobParams.CloseOutType specifying results</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.RunTool">
	<summary>
 Runs the data extraction tool(s)
 </summary>
	<returns>IJobParams.CloseOutType representing success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.PerformPeptideExtraction">
	<summary>
 Calls Ken's DLL to perform peptide hit extraction for Sequest data
 </summary>
	<returns>IJobParams.CloseOutType representing success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.RunPhrpForSequest">
	<summary>
 Runs PeptideHitsResultsProcessor on Sequest output
 </summary>
	<returns>IJobParams.CloseOutType representing success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.DeleteTemporaryFiles(System.String[])">
	<summary>
 Deletes each file in strFileList()
 </summary>
	<param name="strFileList">Full paths to files to delete</param>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.InterleaveFiles(System.String[]@,System.String,System.Boolean)">
	<summary>
 Reads each file in strFileList() line by line, writing the lines to strCombinedFilePath
 Can also check for a header line on the first line; if a header line is found in the first file,
 then the header is also written to the combined file
 </summary>
	<param name="strFileList">Files to combine</param>
	<param name="strCombinedFilePath">File to create</param>
	<param name="blnLookForHeaderLine">When true, then looks for a header line by checking if the first column contains a number</param>
	<returns>True if success; false if failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.SplitFileRoundRobin(System.String,System.Int64,System.Boolean,System.String[]@)">
	<summary>
 Reads strSrcFilePath line-by-line and splits into multiple files such that none of the output 
 files has length greater than lngMaxSizeBytes. Can also check for a header line on the first line;
 if a header line is found, then all of the split files will be assigned the same header line
 </summary>
	<param name="strSrcFilePath">FilePath to parse</param>
	<param name="lngMaxSizeBytes">Maximum size of each file</param>
	<param name="blnLookForHeaderLine">When true, then looks for a header line by checking if the first column contains a number</param>
	<param name="strSplitFileList">Output array listing the full paths to the split files that were created</param>
	<returns>True if success, false if failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsExtractToolRunner.StoreToolVersionInfo">
	<summary>
 Stores the tool version info in the database
 </summary>
	<remarks></remarks>
</member><member name="P:AnalysisManagerExtractionPlugin.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:AnalysisManagerExtractionPlugin.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:AnalysisManagerExtractionPlugin.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:AnalysisManagerExtractionPlugin.clsPepHitResultsProcWrapper.#ctor(AnalysisManagerBase.IMgrParams,AnalysisManagerBase.IJobParams)">
	<summary>
 Constructor
 </summary>
	<param name="MgrParams">IMgrParams object containing manager settings</param>
	<param name="JobParams">IJobParams object containing job parameters</param>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsPepHitResultsProcWrapper.ExtractDataFromResults">
	<summary>
 Converts Sequest, X!Tandem, or Inspect output file to a flat file
 Will auto-determine the input file name, and will set CreateFHTFile and CreateSYNFile to True
 </summary>
	<returns>IJobParams.CloseOutType enum indicating success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsPepHitResultsProcWrapper.ExtractDataFromResults(System.String,System.Boolean,System.Boolean)">
	<summary>
 Converts Sequest, X!Tandem, or Inspect output file to a flat file
 </summary>
	<returns>IJobParams.CloseOutType enum indicating success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsPepHitResultsProcWrapper.MakeTextOutputFiles(System.String,System.Boolean,System.Boolean)">
	<summary>
 Makes flat text file from PeptideSearchResultsFileName
 </summary>
	<returns>IJobParams.CloseOutType enum indicating success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerExtractionPlugin.clsPeptideProphetWrapper.CmdRunner_LoopWaiting">
	<summary>
 Event handler for CmdRunner.LoopWaiting event
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>