<?xml version="1.0"?>
<doc>
<assembly>
<name>
AnalysisManagerDtaSplitPlugIn
</name>
</assembly>
<members>
<member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.Setup(AnalysisManagerBase.IMgrParams,AnalysisManagerBase.IJobParams,AnalysisManagerBase.IStatusFile)">
	<summary>
 Initializes class
 </summary>
	<param name="mgrParams">Object containing manager parameters</param>
	<param name="jobParams">Object containing job parameters</param>
	<param name="StatusTools">Object for updating status file as job progresses</param>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.RunTool">
	<summary>
 Runs InSpecT tool
 </summary>
	<returns>CloseOutType enum indicating success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.SplitCattedDtaFileIntoSegments(System.String,System.Int32)">
	<summary>
 Split the dta txt file into multiple files
 </summary>
	<param name="strSourceFilePath">Input data file path</param>
	<param name="intSegmentCountToCreate">Number of segments to create</param>
	<returns>CloseOutType enum indicating success or failure</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.CountSpectraInCattedDtaFile(System.String)">
	<summary>
 Counts the number of spectra in the input concatenated DTA file (_dta.txt file)
 </summary>
	<param name="strSourceFilePath"></param>
	<returns>The number of spectra found (i.e. the number of header lines found); returns 0 if any problems</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.LineEndCharacterCount(System.IO.FileInfo)">
	<summary>
 This function reads the input file one byte at a time, looking for the first occurence of Chr(10) or Chr(13) (aka vbCR or VBLF)
 When found, the next byte is examined
 If the next byte is also Chr(10) or Chr(13), then the line terminator is assumed to be 2 bytes; if not found, then it is assumed to be one byte
 </summary>
	<param name="fi"></param>
	<returns>1 if a one-byte line terminator; 2 if a two-byte line terminator</returns>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisToolRunnerDtaSplit.StoreToolVersionInfo">
	<summary>
 Stores the tool version info in the database
 </summary>
	<remarks></remarks>
</member><member name="M:AnalysisManagerDtaSplitPlugIn.clsAnalysisResourcesDtaSplit.GetResources">
	<summary>
 Retrieves files necessary for performance of Sequest analysis
 </summary>
	<returns>IJobParams.CloseOutType indicating success or failure</returns>
	<remarks></remarks>
</member>
</members>
</doc>